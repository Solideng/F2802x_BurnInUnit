/**
@page uprog Unit Programming

\section lang Language
For remote programmming operations the burn in unit uses commands that follow the SCPI syntax as 
outlined in the System for Standard Commands for Programmable Instruments for C28x Code Reference 
Manual, where in the standard programmming commands that are included by this system are also outlined.
Please refer to that document and, where necessray, any further referenced documents, for inforrmation
on the syntax of the programming commands. 

This unit programming chapter will focus on the function of the commands specific to the burn in unit

\subsection format Format
The burn in unit uses a standard raw TCP/IP Ethernet connection to communicate with a controlling system.
Once the user's control system has established a valid raw TCP/IP connection with the burn in unit commands
should be sent and received as ASCII character byte string data, with the most significant byte first. 

Thus the data sent that would correspond to the `<`COMMON QUERY PROGRAM HEADER`>` \c *IDN?; in transmission order 
would be (including the '^NL' `<`PROGRAM MESSAGE TERMINATOR`>`)
> <tt>0x2A 0x49 0x44 0x4E 0x3F 0x3B 0x0A</tt>

\subsection progcreation Program Message Unit Creation
The user may create a `<`PROGRAM MESSAGE UNIT`>` by traversing the command tree from the root towards the desired 
function and concatenating the `<`program mnemonic`>`s and `<`COMMAND PROGRAM HEADER`>` or `<`QUERY PROGRAM HEADER`>`
stepped through to reach that destination.

For example, using the hypothetical command tree shown in the following figure, the `<`PROGRAM MESSAGE UNIT`>` required
to  run the function 'EEE' would be:
> <tt>BBB:EEE;</tt> 

\dot 
graph Example {
	size="0.5,0.5"
	graph [rankdir=LR, splines=ortho, fontsize=5];
	node [shape=box];
	ranksep=0.5
	nodesep=0.5
	":" -- {AAA BBB};
	AAA -- {CCC};
	BBB -- {DDD EEE};
}
\enddot

\subsection queries Queries and Responses
Each `<`PROGRAM MESSAGE`>` may contain only one `<`QUERY PROGRAM HEADER`>` which, if used, should be the last 
header in the message. If a `<`QUERY PROGRAM HEADER`>` is used the next operation should be to read the response
generated by the query, before any further `<`PROGRAM MESSAGE`>` elements are sent to the unit. 

\section device Instrument Selection
Each burn in unit is split into several logical instruments that corresponds to the functional 
sections of the burn in unit. The instruement selection is controlled using the \c INSTrument subssytem
These instruments are numbered according to the unit channel numbering shown in the following list. 
These numbers can be obtained by using the \c CATalog? query from the \c INSTrument subsystem: 
> <tt>INSTrument:CATalog?;</tt>.

\zerolist
\zeroitem{Load 0}
\zeroitem{Load 1}
\zeroitem{Load 2}
\zeroitem{Load 3}
\zeroitem{AC Current Control}
\zeroitem{DC Stage}
\zeroitem{AC Stage}
\endzerolist

This means that before setting any of the instruments' settings, the relevant instrument number must 
first be selected. 
This is done using the \c NSELect command from the \c INSTrument subsystem. 
The default instrument selection is 0 
Thus, for example, the `<`PROGRAM MESSAGE`>` required to set the voltage level DC stage to 10 volts would be as follows: 
> <tt>INSTrument:NSELect 5;:SOURce:VOLTage:LEVel 10;</tt>

\section tree The Command Tree
The command tree provides the structure of the subsystems and their commands.
As shown however the diagram does not illustrate that some of the commands have 
no meaning to some instruments. For example, attempting to set the voltage 
coefficients of a current controlled instrument will result in an error.

Again, the commands shown here are in addition to those that are implemented as 
standard by the System for Standard Commands for Programmable Instruments for C28x.

The diagram is followed by a listing of each command. The next section, \ref cmdref
explains the operation and details of each command.

\dot 
graph Example {
	size="5,10"
	graph [rankdir=LR, splines=ortho, fontsize=8];
	node [shape=box];
	ranksep=0.5;
	nodesep=0.5;
	node0 [label=":"];
	node1 [label="CALibration"];
		node11 [label="[ALL]"];
	node2 [label="CONTrol"];
		node21 [label="IDLE"];
			node211 [label="INITiate"];
	node3 [label="INSTrument"]
		node31 [label="CATalog?"]
		node32 [label="[NSELECT]"]
		node33 [label="STATe"]
	node4 [label="OUTPut"];
		node41 [label="STATe"];
	node5 [label="INPut"];
		node51 [label="STATe"];
	node6 [label="SOURce"];
		node61 [label="VOLTage"];
			node611 [label="[LEVel]"];
			node612 [label="LIMit?"];
			node613 [label="PROTect"];
			node614 [label="RANGe"];
			node615 [label="SLEW"];
			node616 [label="COEFficient"];
		node62 [label="CURRent"];
			node621 [label="[LEVel]"];
			node622 [label="LIMit?"];
			node623 [label="PROTect"];
			node624 [label="RANGe"];
			node625 [label="SLEW"];
			node626 [label="COEFficient"];
		node63 [label="FREQuency"];
			node631 [label="[FIXed]"];
			node632 [label="GAIN"];
			node633 [label="OFFSet"];
			node634 [label="RESolution"];
		node64 [label="TEMPerature"];
			node641 [label="[PROTect]"];
	node7 [label="MEASure"];
		node71 [label="VOLTage?"];
		node72 [label="CURRent?"];
		node73 [label="TEMPerature?"];
	node8 [label="STATus"];
		node81 [label="OPERation"];
			node811 [label="[EVENt]?"];
			node812 [label="CONDition?"];
			node813 [label="ENABle"];
			node814 [label="INSTrument"];
				node8141 [label="CONDition?"];
				node8142 [label="ISUMmary?"];
					node81421 [label="[EVENt]?"];
					node81422 [label="CONDition?"];
		node82 [label="PRESet"];
		node83 [label="QUEStionable"];
			node831 [label="[EVENt]?"];
			node832 [label="CONDition?"];
			node833 [label="ENABle"];
			node834 [label="INSTrument"];
				node8341 [label="CONDition?"];
				node8342 [label="ISUMmary?"];
					node83421 [label="[EVENt]?"];
					node83422 [label="CONDition?"];
	node9 [label="SYSTem"];
		node91 [label="COMMs"];
			node911 [label="SCINterface"];
				node9111 [label="SBITs"];
				node9112 [label="PARity"];
				node9113 [label="DBITs"];
				node9114 [label="BAUD"];
				node9115 [label="ECHO"];
	
	node0 -- {node1 node2 node3 node4 node5 node6 node7 node8 node9}; 
	node1 -- node11;
	node2 -- node21 -- node211;
	node3 -- {node31 node32 node33};
	node4 -- node41;
	node5 -- node51;
	node6 -- {node61 node62 node63 node64};
		node61 -- {node611 node612 node613 node614 node615 node616};
		node62 -- {node621 node622 node623 node624 node625 node626};
		node63 -- {node631 node632 node633 node634};
		node64 -- node641;
	node7 -- {node71 node72 node73};
	node8 -- {node81 node82 node83};
		node81 -- {node811 node812 node813 node814};
			node814 -- {node8141 node8142};
				node8142 -- {node81421 node81422};
		node83 -- {node831 node832 node833 node834};
			node834 -- {node8341 node8342};
				node8342 -- {node83421 node83422};
	node9 -- node91 -- node911 -- {node9111 node9112 node9113 node9114 node9115};
}
\enddot

<pre>
<b>CALibration</b>
	ALL
<b>CONTrol</b>
	IDLE
		INITiate
<b>INSTrument</b>
	CATalog?
	NSELect
	STATe
<b>OUTPut</b>
	STATe
<b>INPut</b>
	STATe
<b>SOURce</b>
	VOLTage
		LEVel
		LIMit?
		PROTect
		RANGe
		SLEW
		COEFficient
	CURRent
		LEVel
		LIMit?
		PROTect
		RANGe
		SLEW
		COEFficient
	FREQuency
		FIXed
		GAIN
		OFFSet
		RESolution
	TEMPerature
		PROTect
<b>MEASure</b>
	VOLTage?
	CURRent?
	TEMPerature?
<b>STATus</b>
	OPERation
	PRESet
	QUEStionable
<b>SYSTem</b>
	COMMs
		SCINterface
			SBITs
			PARity
			DBITs
			BAUD
			ECHO
</pre>	
 */