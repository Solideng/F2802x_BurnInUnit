/** 
@page cmdref Command Reference 

This section outlines the operation of each command and node on the command tree. 
All commands, unless otherwise specified, also have an equivalent query form that returns the value that the command is currently 
set to.
For example, querying SOURce:VOLTage:PROTect? will return the current voltage protection level setting.

Some commands have a query form *only*, that is they have no none-query form. these commands are identified by the presence of the 
query terminator character, '?'.

Some of the commands are optional, or default. Such optionality is represented by the presence of square brackets enclosing the 
command, '[' and ']'. 
Where commands are optional, it is possible to use the parent node alone instead of needing to append the optional child command.
For example, as the :NSELect command from the INSTrument subsystem is marked as optional, the command to select an instrument can be
either:
> <tt>INSTrument:NSELect `<`numeric_value`>`;</tt>
or
> <tt>INSTrument `<`numeric_value`>`;</tt>

\section cal CALibration Subsystem
This subsystem has the function of performing system calibration.
Currently the subsystem has only one function, the 
default command ALL and it's complementing query.

\subsection calall [:ALL]
<tt>CALibration:ALL</tt>\n
The CALibration:ALL command performs the same function as the CALibration:ALL? command except there is no response.
Calibration errors are reported through the status-reporting mechanism.
While this command is executing the CALibrating bit of the Operation Status Condition register will be set.

\subsection callallq [:ALL]?
<tt>Calibration:ALL?</tt>\n
The ALL? query performs a full calibration of the instrument and responds with a `<`numeric_value`>` indicating the success 
of the calibration. 
A zero will be returned if calibration is completed successfully; otherwise a nonzero value which represents the
appropriate error number shall be returned. 
An instrument will still report calibration errors through the status-reporting mechanism, even though an error is reported 
by the value of the query response.

\section ctrl CONTrol Subsystem
The CONTrol subsystem is used to turn on and off or control the state of the entire device.

\subsection ctrlidle :IDLE
<tt>CONTrol:IDLE</tt>\n
This node contains commands that control the IDLE state of the device.

\subsubsection ctrlidleinit :INITiate
<tt>CONTrol:IDLE:INITiate</tt>\n
Returns the device to the idle state.
This command is an event and has no associated *RST condition or query command.


\section inst INSTrument Subsystem
This device uses multiple logical instruments (as described in \ref device), this subsystem provides the mechanism to identify and
select logical instruments by number.

\subsection instcat :CATalog?
<tt>INSTrument:CATalog?</tt>\n
The CATalog query returns a comma-separated list of the numbers of all logical instruments. 

\subsection instnsel :NSELect <numeric_value>
<tt>INSTrument:NSELect</tt>\n
This command selects an instrument according to the numeric value parameter. 
When a logical instrument is selected, all other logical instruments or groups are unavailable for programming until selected. 
When queried it shall return the selected logical instrument number. 

Note that the numbering used for logical instruments directly corresponds to the numbers used in status reporting for the
multiple instruments; specifically the STATus:QUEStionable:INSTrument and STATus:OPERation:INSTrument commands. 

At *RST, instrument 0 is selected.

\subsection inststat :STATe <Boolean>
<tt>INSTrument:STATe</tt>\n
Turns the selected logical instrument ON or OFF. 
A logical instrument does not have to be turned OFF before another logical instrument is selected.
That is, several logical instruments may be active, while only one may be selected. 
When an instrument is active, measurements occur and signals are generated. 
When inactive, measurements do not occur and signals are not generated. 
When a logical instrument is selected, yet is inactive, all commands shall be processed so that the logical instrument shall reflect 
the state changes requested when the logical instrument is turned on. 

At *RST, this value is OFF.

\section outp OUTPut Subsystem
The OUTPut subsystem controls the characteristics of the selected instrument's output port.

\subsection outpstat [:STATe] <Boolean>
<tt>OUTPut:STATe</tt>\n
Selects the state of the output. When STATe is ON the signal generated by the source is emitted from the output port of the 
selected instrument.

\section inp INPut Subsystem
The INPut subsystem controls the characteristics of the selected instrument's input port.

\subsection inpstat :STATe <Boolean>
<tt>INPut:STATe</tt>\n
Selects the state of the input. When STATe is ON the signal generated by the source is emitted from the output port of the 
selected instrument.

\section sour SOURce Subsystem
The SOURce setup commands are divided into several sections. 
Each section or subsystem deals with controls that directly affect device-specific settings of the selected instrument.

\subsection sourvolt :VOLTage
This subsection controls the signal voltage characteristics of the source.

\subsubsection sourvoltlev [:LEVel] <numeric_value>
<tt>SOURce:VOLTage:LEVel</tt>\n
This command sets the target voltage level of a voltage controlled instrument. 
The numeric value parameter is the level to be set in volts, between 0 and the voltage limit returned in response the LIMit? query.

\subsubsection sourvoltlim :LIMit?
<tt>SOURce:VOLTage:LEVel</tt>\n
This command has a query form only. 
This is because the voltage limit value is fixed. 
The query response is a single numeric value in volts representing this fixed limit.  

\subsubsection sourvoltprot :PROTect <numeric_value>
<tt>SOURce:VOLTage:PROTect</tt>\n
This command sets the voltage protection level. 
This is the level at which the over-voltage protection is triggered if the voltage rises above it
The numeric value parameter is the level to be set in volts, between 0 and the voltage limit returned in response to the LIMit? query.

\subsubsection sourvoltrang :RANGe <numeric_value>
<tt>SOURce:VOLTage:RANGe</tt>\n
This command sets the voltage range.
The numeric value parameter is the voltage scaling value in volts-per-volt from 0 to 1.

\subsubsection sourvoltslew :SLEW <numeric_value>
<tt>SOURce:VOLTage:SLEW</tt>\n
This command sets the voltage slew for a voltage controlled instrument.
The numeric value parameter is the voltage slew rate value in volts-per-microseconds from 0 to 1.

\subsubsection sourvoltcoef :COEFficient <numeric_value>, <numeric value>
<tt>SOURce:VOLTage:COEFficient</tt>\n
This command is used to specify the voltage control coefficients, of a voltage controlled instrument.
The first numeric value parameter specifies the coefficient to be changed, according to the following list, while the second numeric 
value parameter specifies the level the selected coefficient is to be changed to.  

\zerolist
\zeroitem{Saturation Minimum}
\zeroitem{Saturation Maximum}
\zeroitem{B0}
\zeroitem{B1}
\zeroitem{A1}
\zeroitem{B2}
\zeroitem{A2}
\zeroitem{B3}
\zeroitem{A3}
\endzerolist
 
When queried, the response is a list of comma separated numeric values in the following order:
> Saturation-Minimum-value, Saturation-Maximum-value, B0-value, B1-value, A1-value, B2-value, A2-value, B3-value, A3-value

\subsection sourcurr :CURRent
<tt>SOURce:CURRent</tt>\n
This subsection controls the signal current characteristics of the source.

\subsubsection sourcurrlev [:LEVel] <numeric_value>
<tt>SOURce:CURRent:LEVel</tt>\n
This command sets the target current level of a current controlled instrument. 
The numeric value parameter is the level to be set in amps, between 0 and the current limit returned in response the LIMit? query.

\subsubsection sourcurrlim :LIMit?
<tt>SOURce:CURRent:LEVel</tt>\n
This command has a query form only. 
This is because the current limit value is fixed. 
The query response is a single numeric value in amps representing this fixed limit.  

\subsubsection sourcurrprot :PROTect <numeric_value>
<tt>SOURce:VOLTage:PROTect</tt>\n
This command sets the current protection level. 
This is the level at which the over-current protection is triggered if the current rises above it
The numeric value parameter is the level to be set in amps, between 0 and the current limit returned in response to the LIMit? query.

\subsubsection sourcurrrang :RANGe <numeric_value>
<tt>SOURce:CURRent:RANGe</tt>\n
This command sets the current range.
The numeric value parameter is the current scaling value in amps-per-volt from 0 to 1. <b><-----!!!-----</b>

\subsubsection sourcurrslew :SLEW <numeric_value>
<tt>SOURce:CURRent:SLEW</tt>\n
This command sets the current slew for a current controlled instrument.
The numeric value parameter is the current slew rate value in amps-per-microseconds from 0 to 1.

\subsubsection sourcurrcoef :COEFficient <numeric_value>, <numeric_value>
<tt>SOURce:CURRent:COEFficient</tt>\n
This command is used to specify the current control coefficients, of a current controlled instrument.
The first numeric value parameter specifies the coefficient to be changed, according to the following list, while the second numeric 
value parameter specifies the level the selected coefficient is to be changed to.  

\zerolist
\zeroitem{Saturation Minimum}
\zeroitem{Saturation Maximum}
\zeroitem{B0}
\zeroitem{B1}
\zeroitem{A1}
\zeroitem{B2}
\zeroitem{A2}
\endzerolist
 
When queried, the response is a list of comma separated numeric values in the following order:
> Saturation-Minimum-value, Saturation-Maximum-value, B0-value, B1-value, A1-value, B2-value, A2-value

\subsection sourfreq :FREQuency
<tt>SOURce:FREQuency</tt>\n
The FREQuency subsystem controls the frequency characteristics of an instrument source that produces a periodic signal - such as the 
sine wave produced by the AC stage.

\subsubsection sourfreqfix [:FIXed] <numeric_value>
<tt>SOURce:FREQuency:FIXed</tt>\n
This command is used to set the source frequency.
The numeric value parameter should be the required frequency in hertz, from 0 to 1000.

\subsubsection sourfreqgain :GAIN <numeric_value>
<tt>SOURce:FREQuency:GAIN</tt>\n
This command is used to set the frequency gain.
The numeric value parameter should vary from 0 to 1 

\subsubsection sourfreqoffs :OFFSet <numeric_value>
<tt>SOURce:FREQuency:OFFSet</tt>\n
This command sets the frequency offset.
The numeric value parameter should vary between -0.5 and +0.5

\subsection sourtemp :TEMPerature
<tt>SOURce:TEMPerature</tt>\n
The temperature subsystem controls the temperature of the selected logical instrument.
Note that not all instruments have temperature control functionality.
 
\subsubsection sourtempprot [:PROTect] <numeric_value>
<tt>SOURce:TEMPerature:PROTect</tt>\n
This command sets the temperature protection level. 
This is the level at which the over-temperature protection is triggered if the temperature rises above it
The numeric value parameter is the level to be set in degrees Celsius, between 0 and 150 <sup>o</sup>C.

\section meas MEASure Subsystem
The MEASure susbsytem allows the user to take measurements of certain aspects of the selected instruments operation.

\subsection measvolt :VOLTage?
<tt>MEASure:VOLTage?</tt>
This query responds with a numeric value of the current voltage reading from the selected instrument in volts.

\subsection meascurr :CURRent?
<tt>MEASure:CURRent?</tt>
This query responds with a numeric value of the current electrical current reading from the selected instrument in amps.

\subsection meastemp :TEMPerature?
<tt>MEASure:TEMPerature?</tt>
This query responds with a numeric value of the current temperature reading from the selected instrument in degrees Celsius.


\section stat STATus Subsystem


\subsection statoper :OPERation

\subsection statpres :PRESet

\subsection statques :QUEStionable


\section syst SYSTem
The SYSTem subsystem collects the functions that are not related to instrument
performance. 

\subsection systcomm :COMMs
<tt>SYSTem:COMMs</tt>\n
This subsystem controls some aspects of the serial communications (SCI) interface.

\subsubsection systcommsbit :SBITs <numeric_value>
<tt>SYSTem:COMMs:SBITs</tt>\n
This command sets the number of stop bits used in the SCI frame.
The numeric value parameter sets the number of stop bits and may be either 1 or 2.
The default value is 1.

\subsubsection systcommpar :PARity <numeric_value>
<tt>SYSTem:COMMs:PARity</tt>\n
This command sets what parity is used in the SCI frames.
The defualt selection is for no parity.
The numeric value parameter sets the parity in use and corresponds to parity settings as described by the following list:

\zerolist
\zeroitem{No parity}
\zeroitem{Odd parity}
\zeroitem{Even parity}
\endzerolist

\subsubsection systcommdbit :DBITs <numeric_value>
<tt>SYSTem:COMMs:DBITs</tt>\n
This command sets how many data bits are in the SCI frame.
The numeric value perameter sets the number of data bits and may vary from 1 to 8.

\subsubsection systcommbaud :BAUD <numeric_value> 
<tt>SYSTem:COMMs:BAUD</tt>\n
This command sets the baud rate used by the SCI interface.
The numeric value parameter sets the baud rate.
The allowed parameters are any of the standard baud rates which are listed in the table below.
Acceptance of a baud rate does not indicate that the device is capable of use such a baud rate.
The default baud rate is 9600.

| Accepted Baud Rates	| Accepted Baud Rates	| Accepted Baud Rates	|
|:---------------------:|:---------------------:|:---------------------:|
| 110					| 9600					| 57600					|
| 300					| 14400					| 115200				|
| 600					| 19200					| 230400				|
| 1200					| 28800					| 460800				|
| 2400					| 38400					| 921600				|
| 4800					| 56000					| 						|
  
\subsubsection systcommecho :ECHO <Boolean>
<tt>SYSTem:COMMs:ECHO</tt>\n
This command enables or disables the echo functionality of the SCI interface.
If the boolean parameter is ON the interface echos any data it receives without passing that data on to any other part of the device.
The default setting is OFF.

*/