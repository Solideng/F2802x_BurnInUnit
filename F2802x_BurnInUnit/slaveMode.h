/*
 * slaveMode.h
 *
 *  Created on: 3 Oct 2013
 *      Author: Toby
 */

#ifndef SLAVEMODE_H_
#define SLAVEMODE_H_

// TODO:...
// IF SLAVE SCPI CTRL SHOULD CHANGE INST NUMBERS... EG FROM 5-8 to 1-4
// IF MASTER WITH SLAVE, ALL SCPI DEVICE FUNCTIONS (COMMON, REQUIRED, SPECIFIC) WILL NEED TO CALL MASTER TO SLAVE SPECIFIC FUNCTIONS
//  THEN WAIT FOR A CMD FINISHED STATUS RETURN OR A RESPONSE RETURN IF CMD IS QUERY.
// THE MASTER TO SLAVE SPECIFIC FUNCTIONS ARE WHERE THE SPI USAGE SHOULD TAKE PLACE - THEY SHOULD WAIT ON A RESPONSE BY INTERRUPT
//  **BUT THEY SHOUD NOT BLOCK** IE THE SCPI CNTL SHOULD RETURN FOR THE NEXT ITERATION AFTER THE COMMAND IS SENT, BUT SHOULD NOT DO
//  ANYTHING MORE IN FURTHER ITERATIONS UNTIL A RESPONSE OR STATUS IS RECEIVED BACK ON SPI.

// MAYBE THE MASTER TO SLAVE SPECIFIC FUNCTIONS COULD ALL BE MANAGED BY ONE OR TWO WRAPPER FUNCTIONS THT SIMPLY HANDLE THE CMD
//  PASS-THROUGH AND RESPONSE??

enum slaveMode {
	slaveUnit = 0,
	masterUnit = 1,
	singleUnit = 2,
	undetected = 10
};

typedef enum slaveMode slaveMode;

extern slaveMode slaveModeStatus;

extern slaveMode detectSlaveMode (void);

#endif /* SLAVEMODE_H_ */
